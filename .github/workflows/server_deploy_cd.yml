# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI

# Event Trigger 
# main branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음 
on:
  push:
    branches: [ "main" ]

jobs:
  test:

    # 실행 환경 지정 
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    # Task의 sequence를 명시 
    steps:
    - name: Checkout 
      uses: actions/checkout@v3

    - name: Set Timezone 
      uses: szenius/set-timezone@v1.2
      with: 
        timezoneLinux: "Asia/Seoul"
    
    - name: Set up JDK 17 
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        
    - name: Grant execute permission for gradlew 
      run: chmod +x gradlew 

    - name: Build with Gradle 
      run: ./gradlew clean build
        
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17 
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build with Gradle 
        run: ./gradlew clean build 

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r xxxx-api/build/libs/xxxx-api-0.0.1.jar $USER@$HOST:/tmp
          ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$HOST << EOF
            sudo systemctl stop webapp
            sudo mv /tmp/*.jar /app/webapp.jar
            sudo systemctl start webapp
          EOF
          rm -f private_key.pem

      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DEV_DEPLOY_SLACK_WEBHOOK_URL }}
